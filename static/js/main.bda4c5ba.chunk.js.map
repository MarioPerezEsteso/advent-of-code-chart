{"version":3,"sources":["components/LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["LineChart","data","type","labels","datasets","label","fill","backgroundColor","borderColor","options","responsive","title","display","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAgEeA,MA7Df,WAsDI,OACI,8BACI,cAAC,OAAD,CAAMC,KAvDD,CACTC,KAAM,OACNC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,SAAU,CACN,CACIC,MAAO,QACPJ,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACvBK,MAAM,EACNC,gBAAiB,UACjBC,YAAa,WAEjB,CACIH,MAAO,OACPJ,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACvBK,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAuCCC,QAlCV,CACZC,YAAY,EACZC,MAAO,CACHC,SAAS,EACTC,KAAM,kCAEVC,SAAU,CACNC,KAAM,QACNC,WAAW,GAEfC,MAAO,CACHF,KAAM,UACNC,WAAW,GAEfE,OAAQ,CACJC,MAAO,CAAC,CACJP,SAAS,EACTQ,WAAY,CACRR,SAAS,EACTS,YAAa,iCAGrBC,MAAO,CAAC,CACJV,SAAS,EACTQ,WAAY,CACRR,SAAS,EACTS,YAAa,yBCtClBE,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bda4c5ba.chunk.js","sourcesContent":["import React from 'react'\nimport { Line } from 'react-chartjs-2'\n\nfunction LineChart() {\n    const data = {\n        type: 'line',\n        labels: [1, 2, 3, 4, 5, 6],\n        datasets: [\n            {\n                label: 'Mario',\n                data: [2, 4, 6, 8, 14, 20],\n                fill: false,\n                backgroundColor: '#fabada',\n                borderColor: '#fabada'\n            },\n            {\n                label: 'Javi',\n                data: [3, 5, 7, 8, 12, 16],\n                fill: false,\n                backgroundColor: '#abcdef',\n                borderColor: '#abcdef'\n            }\n        ]\n    }\n\n    const options = {\n        responsive: true,\n        title: {\n            display: true,\n            text: 'üìà Leaderboard Chart'\n        },\n        tooltips: {\n            mode: 'index',\n            intersect: false,\n        },\n        hover: {\n            mode: 'nearest',\n            intersect: true\n        },\n        scales: {\n            xAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: 'üìÖ Day of problem'\n                }\n            }],\n            yAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: '‚≠ê Stars'\n                }\n            }]\n        }\n    }\n\n    return (\n        <div>\n            <Line data={data} options={options} />\n        </div>\n    )\n}\n\nexport default LineChart","import './App.css';\nimport LineChart from './components/LineChart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='chart'>\n        <LineChart />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}